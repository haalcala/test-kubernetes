apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-domains
data:
#   default.conf: |
#     server {
#         listen       80;
#         server_name  localhost;
    
#         #charset koi8-r;
#         #access_log  /var/log/nginx/host.access.log  main;
    
#         location / {
#             root   /usr/share/nginx/html;
#             index  index.html index.htm;
#         }
    
#         #error_page  404              /404.html;
    
#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   /usr/share/nginx/html;
#         }
    
#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         #location ~ \.php$ {
#         #    proxy_pass   http://127.0.0.1;
#         #}
    
#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}
    
#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }
    
#   nginx.conf: |
#     user nginx;
#     worker_processes  3;
#     error_log  /var/log/nginx/error.log;
#     events {
#       worker_connections  10240;
#     }
#     http {
#       log_format  main
#               'remote_addr:$remote_addr\t'
#               'time_local:$time_local\t'
#               'method:$request_method\t'
#               'uri:$request_uri\t'
#               'host:$host\t'
#               'status:$status\t'
#               'bytes_sent:$body_bytes_sent\t'
#               'referer:$http_referer\t'
#               'useragent:$http_user_agent\t'
#               'forwardedfor:$http_x_forwarded_for\t'
#               'request_time:$request_time';
#       access_log	/var/log/nginx/access.log main;
#       server {
#           listen       80;
#           server_name  _;
#           location / {
#               root   html;
#               index  index.html index.htm;
#           }
#       }
#       include /etc/nginx/virtualhost/virtualhost.conf;
#     }

  python-hello-web-foo.conf: |
    upstream python-hello-web-foo {
      server python-hello-web-foo-svc:80;
      keepalive 1024;
    }
    server {
      listen 80;
      server_name python-hello-web-foo;
      root /usr/local/python-hello-web-foo;
      access_log /var/log/nginx/python-hello-web-foo.access_log main;
      error_log /var/log/nginx/python-hello-web-foo.error_log;
      location / {
        proxy_pass http://python-hello-web-foo-svc/;
        proxy_http_version 1.1;
      }
    }

  python-hello-web-bar.conf: |
    upstream python-hello-web-bar {
      server python-hello-web-bar-svc:80;
      keepalive 1024;
    }
    server {
      listen 80;
      server_name python-hello-web-bar;
      root /usr/local/python-hello-web-bar;
      access_log /var/log/nginx/python-hello-web-bar.access_log main;
      error_log /var/log/nginx/python-hello-web-bar.error_log;
      location / {
        proxy_pass http://python-hello-web-bar-svc/;
        proxy_http_version 1.1;
      }
    }


---
apiVersion: v1
kind: Service
metadata:
  name: python-hello-web-foo-svc
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: python-hello-web-foo-v1


---
apiVersion: v1
kind: Service
metadata:
  name: python-hello-web-bar-svc
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 5000
  selector:
    app: python-hello-web-bar-v1


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-hello-web-foo-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python-hello-web-foo-v1
  template:
    metadata:
      labels:
        app: python-hello-web-foo-v1
    spec:
      containers:
      - name: python-hello-web-foo-v1
        image: haalcala/python-hello-web-foo-v1
        ports:
        - containerPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-hello-web-bar-v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python-hello-web-bar-v1
  template:
    metadata:
      labels:
        app: python-hello-web-bar-v1
    spec:
      containers:
      - name: python-hello-web-bar-v1
        image: haalcala/python-hello-web-bar-v1
        ports:
        - containerPort: 5000


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-hello-web-nginx
spec:
  replicas: 4
  selector:
    matchLabels:
      app: python-hello-web-nginx
  template:
    metadata:
      labels:
        app: python-hello-web-nginx
    spec:
      containers:
      - name: python-hello-web-nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: python-hello-web-foo
          mountPath: /etc/nginx/conf.d/python-hello-web-foo.conf # mount nginx-conf volumn to /etc/nginx
          subPath: python-hello-web-foo.conf
        - name: python-hello-web-bar
          mountPath: /etc/nginx/conf.d/python-hello-web-bar.conf # mount nginx-conf volumn to /etc/nginx
          subPath: python-hello-web-bar.conf
        #   readOnly: true
          
        - mountPath: /var/log/nginx
          name: log
      volumes:
      - name: python-hello-web-foo
        configMap:
          name: nginx-domains # place ConfigMap `nginx-conf` on /etc/nginx
          items:
        #     # - key: nginx.conf
        #     #   path: nginx.conf
            - key: python-hello-web-foo.conf
              path: python-hello-web-foo.conf # dig directory
      - name: python-hello-web-bar
        configMap:
          name: nginx-domains # place ConfigMap `nginx-conf` on /etc/nginx
          items:
        #     # - key: nginx.conf
        #     #   path: nginx.conf
            - key: python-hello-web-bar.conf
              path: python-hello-web-bar.conf # dig directory
      - name: log
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: python-hello-web-nginx-svc
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: python-hello-web-nginx